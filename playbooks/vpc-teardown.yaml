---
# vpc-teardown.yml
- name: Teardown AWS VPC and associated resources
  hosts: localhost
  gather_facts: no
  vars_files:
    - vars.yml

  tasks:
    - name: Get VPC ID
      amazon.aws.ec2_vpc_net_info:
        region: "{{ aws.region }}"
        profile: "{{ aws.profile }}"
        filters:
          "tag:Name": "{{ vpc.name }}"
      register: vpc_info

    - name: Delete load balancer security group
      amazon.aws.ec2_security_group:
        name: "{{ vpc.name }}-lb-sg"
        region: "{{ aws.region }}"
        profile: "{{ aws.profile }}"
        vpc_id: "{{ vpc_info.vpcs[0].vpc_id }}"
        state: absent
      ignore_errors: yes
      when: vpc_info.vpcs | length > 0

    - name: Get NAT Gateway info
      amazon.aws.ec2_vpc_nat_gateway_info:
        region: "{{ aws.region }}"
        profile: "{{ aws.profile }}"
        filters:
          vpc-id: "{{ vpc_info.vpcs[0].vpc_id }}"
      register: nat_gateway_info
      when: vpc_info.vpcs | length > 0

    - name: Get EIP information
      amazon.aws.ec2_eip_info:
        region: "{{ aws.region }}"
        profile: "{{ aws.profile }}"
      register: eip_info
      when: vpc_info.vpcs | length > 0

    - name: Remove NAT Gateway
      amazon.aws.ec2_vpc_nat_gateway:
        nat_gateway_id: "{{ item.nat_gateway_id }}"
        state: absent
        wait: yes
        region: "{{ aws.region }}"
        profile: "{{ aws.profile }}"
      loop: "{{ nat_gateway_info.result }}"
      when: 
        - nat_gateway_info.result is defined 
        - nat_gateway_info.result | length > 0
      ignore_errors: yes

    - name: Wait for NAT Gateway deletion
      pause:
        seconds: 30
      when: 
        - nat_gateway_info.result is defined 
        - nat_gateway_info.result | length > 0

    - name: Release EIPs
      amazon.aws.ec2_eip:
        region: "{{ aws.region }}"
        profile: "{{ aws.profile }}"
        release_on_disassociation: true
        state: absent
        in_vpc: true
        public_ip: "{{ item.public_ip }}"
      loop: "{{ eip_info.addresses | selectattr('domain', 'equalto', 'vpc') | list }}"
      when: 
        - eip_info.addresses is defined
        - eip_info.addresses | length > 0
      ignore_errors: yes

    - name: Delete route tables
      amazon.aws.ec2_vpc_route_table:
        vpc_id: "{{ vpc_info.vpcs[0].vpc_id }}"
        region: "{{ aws.region }}"
        profile: "{{ aws.profile }}"
        tags:
          Name: "{{ vpc.name }}-{{ item }}-rt"
        state: absent
      loop:
        - public
        - private
      ignore_errors: yes
      when: vpc_info.vpcs | length > 0

    - name: Delete subnets
      amazon.aws.ec2_vpc_subnet:
        vpc_id: "{{ vpc_info.vpcs[0].vpc_id }}"
        region: "{{ aws.region }}"
        profile: "{{ aws.profile }}"
        cidr: "{{ item.cidr }}"
        state: absent
      loop: "{{ vpc.private_subnets + vpc.public_subnets }}"
      ignore_errors: yes
      when: vpc_info.vpcs | length > 0

    - name: Delete Internet Gateway
      amazon.aws.ec2_vpc_igw:
        vpc_id: "{{ vpc_info.vpcs[0].vpc_id }}"
        region: "{{ aws.region }}"
        profile: "{{ aws.profile }}"
        state: absent
      ignore_errors: yes
      when: vpc_info.vpcs | length > 0

    - name: Delete VPC
      amazon.aws.ec2_vpc_net:
        name: "{{ vpc.name }}"
        cidr_block: "{{ vpc.cidr }}"
        region: "{{ aws.region }}"
        profile: "{{ aws.profile }}"
        state: absent
      ignore_errors: yes
      when: vpc_info.vpcs | length > 0

    - name: Display cleanup results
      debug:
        msg: "VPC {{ vpc.name }} and associated resources have been removed"
      when: vpc_info.vpcs | length > 0